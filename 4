#1 решение
def main(n):
    if n == 0:
        return 0.93
    else:
        previous_value = main(n - 1)
        return 4 * previous_value - 1 - previous_value ** 3

#2 решение
import math
def main(n):
    if n == 0:
        return 0.93
    else:
        return 4 * main(n - 1) - 1 - pow(main(n - 1), 3)

#3 решение
import math
def main(n):
    return (
         0.93 if n == 0 else
         (lambda x: 4 * x[1] - 1 - x[1] ** 3)([main(n-1), main(n-1)])
     )

#4 решение
import math
def main(n):
    return (0.93 if n == 0
            else 4 * main(n - 1) - 1 - (main(n - 1) ** 3))

#5 решение
import math
cache = [0.93]
def main(n):
    if n < len(cache):
        return cache[n]
    else:
        result = 4 * main(n - 1) - 1 - (main(n - 1) ** 3)
        cache.append(result)
        return result

#6 решение
import math
def main(n):
    cache = [0.93]
    for i in range(1, n + 1):
        result = 4 * cache[i - 1] - 1 - (cache[i - 1] ** 3)
        cache.append(result)
    return cache[n]
